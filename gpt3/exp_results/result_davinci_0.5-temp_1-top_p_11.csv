,level,is_unique,is_playable
0,a -> Map.Map a -> Map.Map a -> Map.Map a # gmapQ :: (forall b. Data.Functor.Identity.Identity b => b -> b) -> Map.Map a -> Map.Map a # gmapQM :: (forall b. Data.Functor.Identity.Identity b => b -> Map.Map a -> b) -> Map.Map a -> b # gmapQi :: Int -> (forall b. Data.Functor.Identity.Identity b => b -> b) -> Map.Map a -> Map.Map a # gmapQiM :: Int -> (forall b. Data.Functor.Id,True,False
1,"Maybe (Map.Map (Maybe (Key Text)) (Maybe (Value Text)))

lookupWithDefault :: DefaultKey -> Text -> TextMap. -> Maybe (Map.Map (Maybe (Key Text)) (Maybe (Value Text)))

-- | A 'TextMap' is a map from 'Text' keys to 'Text' values.

--

-- This module provides a number of functions for creating and

-- querying 'TextMap's.

--

-- The keys and values are normal 'Text's. The values can be

-- arbitrary binary data, not just text.

--

-- The following functions are provided:

--

-- * '",True,False
2,"##########
#--#######
#-$#######
#--#######
#--#######
#-#-#--###
#--.#-@###
#-$-$$$-##
#.----.##
##########",True,False
3,"##########
#--.--####
#-$-#-####
#-$.-#####
#-#--#####
#-.-######
#-$$######
#--#######
#-@-######
##########",True,False
4,"##########
#--#######
#-$#######
#--#######
#-$#######
#--#######
#-@#######
#.$-######
#-----.###
##########",True,False
5,"##########
#.---#####
#--$-#####
#-$-######
#--#######
#-$#######
#-@#######
#.$-######
#--#######
##########",True,False
6,"##########
#-.-$-####
#--.---###
#--$---###
#-#####-##
#-#####-##
#-#####--#
#--##-$-.#
#---@--$-#
##########",True,False
7,"##########
#--#######
#-$-######
#-#-######
#--..-####
#--$-#####
#-#-######
#-@-######
#-.-######
##########",True,False
8,"##########
#----#####
#-.-$#####
#-$#######
#-.-######
#-$-######
#--#######
#-@#######
#----#####
##########",True,False
9,"##########

##########

##########

##########

##########

##########

#-#-#######

#@$-#######

##########",True,False
